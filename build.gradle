buildscript {
    dependencies {
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1"
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'com.palantir.docker' version '0.22.1'
}

group = 'org.serasmi.api'
version = '0.0.1-SNAPSHOT'
description = 'articles'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'org.postgresql:postgresql:42.2.8'
    implementation 'com.h2database:h2:1.4.199'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
}

apply plugin: "com.palantir.docker"

docker {
    name "${project.group}/${project.description}"

    pull false
    noCache true
}

test {
    useJUnitPlatform()
}